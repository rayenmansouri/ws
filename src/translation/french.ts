import { TranslationObject } from "./translationKeys";

export const frenchTranslation: TranslationObject = {
  chapter: {
    classTypeOrTopicWithGroupTypeRequired:
      "Le type de classe ou le sujet avec le type de groupe est requis",
  },
  chapterAttachment: {
    videoAndOtherFiles: "Vidéo et autres fichiers",
  },
  alreadyUsed: {
    email: "L'email est déjà utilisé",
    name: "Le nom est déjà utilisé",
    phoneNumber: "Le numéro de téléphone est déjà utilisé",
    nationalCardId: "L'identifiant de la carte nationale est déjà utilisé",
    uniqueId: "L'identifiant unique est déjà utilisé",
    averageRange: "La plage de moyenne est déjà utilisée",
    fieldName: "Le nom du champ est déjà utilisé",
    subdomain: "Le sous-domaine est déjà utilisé",
    range: "La plage est déjà utilisée",
    subjectType: "Le type de matière est déjà utilisé",
    term: "Le terme est déjà utilisé",
    sessionType: "Le type de session est déjà utilisé",
    classroom: "La salle de classe est déjà utilisée",
    examType: "Le type d'examen est déjà utilisé",
  },
  validation: {
    parentEmailOrPhoneNumberRequired: "L'email ou le numéro de téléphone du parent est requis",
    newPasswordMustNoBeTheSameAsOldPassword:
      "Le nouveau mot de passe ne doit pas être le même que l'ancien mot de passe",
    invalidPassword: "Mot de passe invalide",
  },
  alreadyExist: {
    schoolYear: "L'année scolaire existe déjà",
  },
  authentication: {
    invalidCredentials: "Identifiants invalides",
    cannotResetYourOwnPassword: "Vous ne pouvez pas réinitialiser votre propre mot de passe",
    resetUserPasswordWithSuccess: "Mot de passe réinitialisé avec succès",
  },
  classTypeRules: {
    classTypeAndLevelAreNotValid: "Le type de classe et le niveau ne sont pas valides",
  },
  global: {
    internalError: "Erreur interne",
    largePayload: "La charge utile est trop grande",
    listSuccessfullyRetrieved: "La liste a été récupérée avec succès",
    permissionDenied: "Permission refusée",
    variableUsedBeforeInit: "La variable est utilisée avant l'initialisation",
    unsupportedFile: "Type de fichier non pris en charge",
    invalidJSON: "JSON invalide",
    success: "Succès",
    accessDenied: "Accès refusé",
    badRequest: "Mauvaise demande",
    fileIsRequired: "Le fichier est requis",
    userNotFound: "Utilisateur introuvable",
  },
  notFound: {
    chapterAttachment: "Pièce jointe de chapitre introuvable",
    tutorial: "Tutoriel introuvable",
    group: "Groupe non trouvé",
    schoolYear: "Année scolaire introuvable",
    classroom: "Classe non trouvée",
    teacherProfile: "Profile de l'enseignant non trouvé",
    teacher: "Enseignant non trouvé",
    student: "Élève non trouvé",
    user: "Utilisateur non trouvé",
    classType: "Le type de classe est introuvable",
    level: "Le niveau est introuvable",
    nextClassType: "Le type de classe suivant est introuvable",
    parent: "Le parent est introuvable",
    homework: "Les devoirs sont introuvables",
    issue: "Le problème est introuvable",
    notification: "La notification est introuvable",
    subjectType: "Le type de matière est introuvable",
    groupType: "Le type de group est introuvable",
    school: "L'école est introuvable",
    class: "La classe est introuvable",
    term: "Le terme est introuvable",
    service: "Le service est introuvable",
    expense: "La dépense est introuvable",
    supplier: "Le fournisseur est introuvable",
    transaction: "La transaction est introuvable",
    diploma: "Le diplôme est introuvable",
    post: "Le post est introuvable",
    comment: "Le commentaire est introuvable",
    admin: "Administrateur introuvable",
    conversation: "Conversation introuvable",
    message: "Message introuvable",
    session: "Session introuvable",
    observation: "Punition introuvable",
    subLevel: "Niveau inférieur introuvable",
    section: "Section introuvable",
    subject: "Matière introuvable",
    subSubjectType: "Sous-type de matière introuvable",
    field: "Champ introuvable",
    examType: "Type d'examen introuvable",
    observationReason: "Raison de la punition introuvable",
    holiday: "Vacances introuvables",
    master: "Maître introuvable",
    barCode: "Code-barres introuvable",
    osAppVersion: "Version du système d'exploitation de l'application non trouvée",
    sessionType: "Type de session introuvable",
    invoice: "Facture non trouvée.",
    alert: "Alerte introuvable",
    topicType: "Type de sujet introuvable",
    weeklySession: "Créneau horaire hebdomadaire introuvable",
    bankTransfer: "Virement bancaire introuvable",
    preRegistration: "Pré-inscription introuvable",
    gradeReportTemplate: "Modèle de bulletin de notes introuvable",
    teacherPaymentConfiguration: "Configuration de paiement de l'enseignant introuvable",
    classGroup: "Classe de groupe introuvable",
    bankCheck: "Chèque bancaire introuvable",
    activity: "Activité introuvable",
    paymentHistory: "Historique de payment introuvable",
    schedule: "Emploi du temps introuvable",
    paymentTemplate: "Modèle de paiement introuvable",
    issueReason: "Raison du problème non trouvée",
    signature: "Signature introuvable",
    chapter: "",
  },
  studentRules: {
    studentAlreadyAssignedToParent: "L'élève est déjà assigné à ce parent",
    parentAlreadyAssignedToStudent: "Le parent est déjà assigné à cet élève",
    studentNotAssignedToParent: "L'élève n'est pas assigné à ce parent",
    parentNotAssignedToStudent: "Le parent n'est pas assigné à cet élève",
    importWithSuccess: "Élèves importés avec succès",
    studentNotAssignedToClass: "L'élève n'est pas assigné à une classe.",
    studentNotAssignedToGroup: "L'élève n'est pas assigné à un groupe.",
    notBelongToThisClass: "L'élève n'appartient pas à cette classe",
  },
  student: {
    alreadyInClass: "L'élève est déjà dans cette classe",
    classTypeDoesNotMatch: "Le type de classe ne correspond pas",
    addedSuccessfully: "Élève ajouté avec succès",
    updatedSuccessfully: "Élève mis à jour avec succès",
    noAverage: "L'étudiant n'a pas de moyenne",
    noDiploma: "L'étudiant n'a pas de diplôme",
    notAssignedToClass: "L'élève n'est pas assigné à cette classe",
    alreadyArchived: "L'élève a déjà été archivé",
    cannotArchiveStudentAssignedToClass:
      "Impossible d'archiver tant que l'élève est affecté à une classe",
    cannotArchiveStudentAssignedToGroups:
      "Impossible d'archiver tant que l'élève est affecté à des groupes",
    alreadyUnArchived: "L'élève est déjà désarchivé",
    cannotChangeLevelWhenAssignedToClass:
      "Impossible de changer le niveau lorsque l'élève est affecté à une classe",
    cannotChangeClassTypeWhenAssignedToClass:
      "Impossible de changer le type de classe lorsque l'élève est affecté à une classe",
  },
  parent: {
    addedSuccessfully: "Parent ajouté avec succès.",
    alreadyArchived: "Le parent a déjà été archivé.",
    cannotArchiveLastParentOfStudent: " Impossible d'archiver le dernier parent de l'élève.",
    alreadyUnArchived: "Le parent est déjà désarchivé",
    updatedSuccessfully: "Parent mis à jour avec succès",
  },
  teacher: {
    salary: "Salaire de l'enseignant",
    teacherAlreadyAssigned: "L'enseignant est déjà affecté à cette classe",
    cannotTeacherThisSubjectType: "L'enseignant ne peut pas enseigner ce type de matière",
    cannotTeachInThisLevel: "L'enseignant ne peut pas enseigner dans ce niveau",
    addedSuccessfully: "Enseignant ajouté avec succès",
    cannotSeeThisClassLevels: "L'enseignant ne peut pas voir les niveaux de cette classe",
    sessionDoesNotBelongsToThisTeacher: "La session ne appartient pas à cet enseignant",
    alreadyArchived: "L'enseignant a déjà été archivé",
    cannotArchiveTeacherAssignedToClass:
      "Impossible d'archiver tant que l'enseignant est affecté à une classe.",
    cannotArchiveTeacherAssignedToGroup:
      "Impossible d'archiver tant que l'enseignant est affecté à un groupe.",
    alreadyUnArchived: "L'enseignant est déjà désarchivé",
    notAssignedToClass: "L'enseignant n'est pas affecté à cette classe",
    updatedSuccessfully: "Enseignant mis à jour avec succès",
    cannotRemoveLevelWithClasses: "Impossible de supprimer un niveau avec des classes",
    alreadyPaid: "L'enseignant est déjà payé",
    notPaid: "L'enseignant n'a pas été payé.",
    notAssignedToSubject: "L'enseignant n'est pas affecté à cette matière",
    cannotTeacherThisGroupType: "L'enseignant ne peut pas enseigner ce type de groupe",
  },
  admin: {
    addedSuccessfully: "Admin ajouté avec succès",
    updatedSuccessfully: "Admin mis à jour avec succès",
    alreadyArchived: "L'administrateur a déjà été archivé",
    alreadyUnArchived: "L'administrateur est déjà désarchivé",
    CannotArchiveYourself: " Vous ne pouvez pas vous archiver.",
  },
  roleManagement: {
    roleNotFound: "Rôle introuvable",
    permissionNotValid: "Permission non valide",
    createdSuccessfully: "Rôle créé avec succès",
    updatedSuccessfully: "Rôle mis à jour avec succès",
    deletedSuccessfully: "Rôle supprimé avec succès",
  },
  services: {
    isUsed: "Le service ne peut pas être supprimé car il est utilisé dans des factures payées",
    doesNotHaveAmount: "Le service n'a pas de montant",
    maxDefaultServicesReached: "Le nombre maximum de services par défaut a été atteint",
  },
  supplier: {
    addedSuccessfully: "Fournisseur ajouté avec succès",
    updatedSuccessfully: "Fournisseur mis à jour avec succès",
    deletedSuccessfully: "Fournisseur supprimé avec succès",
  },
  transaction: {
    haveSupplier: "La transaction a un fournisseur",
  },
  groupRules: {
    studentNotInGroup: "L'élève n'est pas dans ce groupe",
    groupsAndLevelsAreNotValid: "Les groups et les niveaux ne sont pas valides",
    teacherIsNotInGroup: "L'enseignant n'enseigne pas cette groupe",
    studentAlreadyInGroup: "L'élève est déjà dans ce groupe",
    studentAndLevelMismatch: "Élève et niveau ne correspondent pas",
    studentClassTypeNotMatch: "Le type de classe de l'élève ne correspond pas",
    groupHasStudent: "La groupe a des élèves",
    groupIncludeInGradeBookCannotHaveMultipleLevels:
      "La groupe incluse dans le carnet de notes ne peut pas avoir plusieurs niveaux",
  },
  class: {
    maxStudentReached: "Le nombre maximum d'élèves a été atteint",
    classReturnedSuccessfully: "Classe retournée avec succès",
    updateSuccessfully: "Classe mise à jour avec succès",
    deletedSuccessfully: "Classe supprimée avec succès",
    alreadyGenerated: "La classe a déjà été générée",
    hasNoStudent: "La classe n'a pas d'élève",
    withoutNextClassType: "La classe n'a pas de type de classe suivant",
    teacherAlreadyAssigned: "L'enseignant est déjà affecté à cette classe",
    noTeacherAssigned: "L'enseignant n'est pas affecté à cette classe",
  },
  classRules: {
    teacherIsNotInClass: "L'enseignant n'enseigne pas dans cette classe",
    classHasStudent: "La classe a des élèves",
    classHasTeacher: "La classe a un enseignant",
  },
  diploma: {
    addedSuccessfully: "Diplôme ajouté avec succès",
    updateSuccessfully: "Diplôme mis à jour avec succès",
    diplomaNameNotFound: "Le nom du diplôme est introuvable",
  },
  issue: {
    accessDenied: "Vous n'êtes pas autorisé à ce problème",
    newStatusMustBeDifferentThanOldStatus:
      "Le nouveau statut doit être différent de l'ancien statut.",
    alreadyResolved: "Ce problème a déjà été résolu.",
    noTeacherAssigned: "Aucun enseignant n’a été assigné à ce problème.",
    alreadyForwarded: "Ce problème a déjà été transféré et ne peut pas être transféré de nouveau.",
    youCannotSendReply: "Vous ne pouvez pas envoyer de réponse.",
    attachmentOrTextRequired: "Vous devez ajouter un message ou une pièce jointe.",
  },
  conversations: {
    groupConversationNameUpdateOnlyAllowed:
      "Vous pouvez uniquement mettre à jour le nom de la conversation de groupe.",
    duplicateParticipants:
      "Vous pouvez uniquement mettre à jour le nom de la conversation de groupe.",
    cannotRemoveAllParticipants: "Vous ne pouvez pas retirer tous les participants",
    alreadyParticipating: "L'utilisateur participe déjà à cette conversation",
    groupNameRequired: "Le nom du groupe est requis",
    groupAlreadyExists: "Un groupe avec ces participants existe déjà",
    groupConversationMinimumTwoParticipants:
      "La conversation de groupe nécessite au moins trois participants",
    cannotRemoveTheLastAdmin: "Vous ne pouvez pas retirer le dernier administrateur",
    conversationMustBeGroup: "La conversation de ces participants n'est pas un groupe",
    youAreNotAdminInsideThisGroup: "Vous n'êtes pas administrateur dans ce groupe.",
    replyToMessageDoesNotBelongToThisConversation:
      "Le message de réponse ne appartient pas à cette conversation",
  },
  messages: {
    eitherContentOrAttachmentMustBeProvided:
      "Le contenu ou les pièces jointes doivent être fournis",
    conversationAlreadyExist: "Une conversation avec les participants spécifiés existe déjà.",
    youAreNotAllowedToStartConversation: "Vous n'êtes pas autorisé à démarrer une conversation.",
    youAreNotPartOfThisConversation: "Vous ne faites pas partie de cette conversation",
    youCannotStartConversationByYourSelf:
      "Vous ne pouvez pas démarrer une conversation avec vous-même.",
  },
  term: {
    invalid: "Le terme est invalide",
    notCompleted: "Le terme n'est pas terminé",
    isCompleted: "Le terme est terminé",
    cannotBeCompleted: "Le terme ne peut pas être terminé",
    previousTermNotCompleted: "Le terme précédent n'est pas terminé",
    alreadyPublished: "Le terme est déjà publié",
    notPublished: "Le terme n'est pas publié",
    annual: "Annuel",
    previousTermsNeedToBeUncompleted:
      "Les termes précédents doivent être annulés avant d'annuler ce terme",
  },
  invalid: {
    teacher: "L'enseignant est invalide",
    classType: "Le type de classe est invalide",
    newRank: "Le nouveau rang est invalide",
    subjectType: "Le type de matière est invalide",
    subSubjectType: "Le sous-type de matière est invalide",
    subLevels: "Les sous-niveaux sont invalides",
    examGrade: "La note d'examen est invalide",
    class: "La classe est invalide",
    session: "La session est invalide",
    group: "Le groupe est invalide",
    weeklySession: "Le créneau horaire est invalide",
    code: "Le code est invalide",
  },
  classType: {
    updateSuccessfully: "Type de classe mis à jour avec succès",
    createdSuccessfully: "Type de classe créé avec succès",
    subjectsReorderedSuccessfully: "Sujets réordonnés avec succès",
    fieldReorderedSuccessfully: "Champs réordonnés avec succès",
    subSubjectsReorderedSuccessfully: "Sous-sujets réordonnés avec succès",
    subjectToClassTypeAddedSuccessfully: "Matière ajoutée au type de classe avec succès",
    subjectTypeAlreadyUsed: "Le type de matière est déjà utilisé",
    subjectTypeDoesNotHaveSubSubjects: "Le type de matière n'a pas de sous-matières",
    subjectTypeNotFound: "Type de matière introuvable",
    subSubjectTypeAlreadyUsed: "Le sous-type de matière est déjà utilisé",
    fieldAddedSuccessfully: "Champ ajouté avec succès",
    linkedWithSomeClasses: "Le type de classe est lié à certaines classes",
    linkedWithSomeStudents: "Le type de classe est lié à certains élèves",
    linkedWithSomePreRegistrations: "Le type de classe est lié à certaines pré-inscriptions",
    linkedWithSomeNextClassTypes: "Le type de classe est lié à certains types de classe suivants",
    subSubjectDeletedSuccessfully: "Sous-matière supprimée avec succès",
    linkedWithSomeSection: "Le type de classe est lié à certaines sections",
    subjectTypeNotIncluded: "Le type de matière n'est pas inclus",
  },
  subject: {
    stillTaught: "La matière est toujours enseignée",
    hasSubSubjects: "La matière a des sous-matières",
    cannotHaveExams: "La matière ne peut pas avoir d'examens",
    updatedSuccessfully: "Matière mise à jour avec succès",
  },
  section: {
    createdSuccessfully: "Section créée avec succès",
    updatedSuccessfully: "Section mise à jour avec succès",
    deletedSuccessfully: "Section supprimée avec succès",
  },
  level: {
    createdSuccessfully: "Niveau créé avec succès",
    updatedSuccessfully: "Niveau mis à jour avec succès",
    deletedSuccessfully: "Niveau supprimé avec succès",
    hasMultipleSchoolYear: "Le niveau a plusieurs années scolaires",
    hasSubLevels: "Le niveau a des sous-niveaux",
    hasInvoices: "Le niveau a des factures",
    hasTeacher: "Le niveau a un enseignant",
    hasTeacherPaymentHistory: "Le niveau a un historique de paiement de l'enseignant",
    hasStudents: "Le niveau a des élèves",
    hasTransactions: "Le niveau a des transactions",
    hasPreRegistrations: "Le niveau a des pré-inscriptions",
    hasClassTypes: "Le niveau a des types de classe",
    cannotSwitchToNextSchoolYear: "Le niveau ne peut pas être passé à l'année scolaire suivante",
    unsupportedExamGradeSystem: "Le système de notes n'est pas supporté",
  },
  subLevel: {
    createdSuccessfully: "Sous-niveau créé avec succès",
    deletedSuccessfully: "Sous-niveau supprimé avec succès",
    updatedSuccessfully: "Sous-niveau mis à jour avec succès",
    hasGroup: "Le sous-niveau a une groupe",
    hasSections: "Le sous-niveau a des sections",
    hasClassType: "Le sous-niveau a un type de classe",
  },
  observationReason: {
    addedSuccessfully: "Raison de la punition ajoutée avec succès",
    updatedSuccessfully: "Raison de la punition mise à jour avec succès",
    deletedSuccessfully: "Raison de la punition supprimée avec succès",
    IsUsed: "La raison de la punition est utilisée",
  },
  session: {
    present: "Présent",
    absent: "Absent",
    expelled: "Exclu",
    late: "En retard",
    sessionTimePassedForConfirmationAttendance:
      "Le temps de session pour confirmer la présence est expiré",
    sessionAlreadyClosed: "La session a déjà été fermée",
    sessionMustBeInProgress: "La session doit être en cours",
    sessionIsAlreadyPaid: "La session est déjà payée",
    enableToTerminateSessionBeforeItEnd:
      "Impossible de terminer la session avant qu'elle ne se termine",
    teacherHasAlreadyStartedSession: "L'enseignant a déjà commencé une autre session",
    youCanOnlyStartThisSessionAfterTheMinimumSessionLaunchTime:
      "Vous pouvez seulement démarrer cette session après la date de démarrage minimum de session",
    sessionCannotBeLaunched: "La session ne peut pas être lancée",
    sessionMustBelongToAClassOrAGroupOrClassGroup:
      "La session doit appartenance à une classe, un groupe ou une groupe",
    sessionStatusCannotBeUpdateItToPending: "La session ne peut pas être mise à jour en attente.",
    canceledSessionCanOnlyBeUpdatedToPending:
      "Une session annulée ne peut être mise à jour qu'en attente.",
    youCanOnlyCloseThisSessionBeforeEndTime:
      "Vous ne pouvez fermer cette session qu'avant l'heure de fin",
    cannotChangeStatusFromCompletedToPending:
      "Impossible de changer le statut de terminé à en attente.",
    deletedSuccessfully: "Session supprimée avec succès",
    onlyPendingCanceledSessionCanBeDeleted:
      "Seules les sessions annulées en attente peuvent être sup",
    teacherOfThisSessionAlreadyPaid: "L'enseignant de cette session a déjà été payé",
    sessionCannotBeInThePass: "La session ne peut pas être dans le passé",
    teacherNotAvailable: "Enseignant non disponible",
    classroomNotAvailable: "Salle de classe non disponible",
    classNotAvailable: "Classe non disponible",
    groupNotAvailable: "Groupe non disponible",
    cannotUpdateInThePast: "Impossible de mettre à jour dans le passé",
    startTimeMustBeBeforeEndTime: "L'heure de début doit être avant l'heure de fin",
    classGroupNotAvailable: "Classe de groupe non disponible",
  },
  subjectType: {
    addedSuccessfully: "Type de matière ajouté avec succès",
    deletedSuccessfully: "Type de matière supprimé avec succès",
    updatedSuccessfully: "Type de matière mis à jour avec succès",
    isTaughtByTeacher: "Le type de matière est enseigné par l'enseignant",
    isUsed: "Le type de matière est utilisé",
  },
  subSubjectType: {
    addedSuccessfully: "Sous-type de matière ajouté avec succès",
    updatedSuccessfully: "Sous-type de matière mis à jour avec succès",
    deletedSuccessfully: "Sous-type de matière supprimé avec succès",
  },
  holiday: {
    createdSuccessfully: "Vacances créées avec succès",
    updatedSuccessfully: "Vacances mises à jour avec succès",
    deletedSuccessfully: "Vacances supprimées avec succès",
  },
  master: {
    addedSuccessfully: "Maître ajouté avec succès",
    updatedSuccessfully: "Maître mis à jour avec succès",
    deletedSuccessfully: "Maître supprimé avec succès",
  },
  school: {
    addedSuccessfully: "École ajoutée avec succès",
    configNotFound: "La configuration n'existe pas",
    updatedSuccessfully: "École mise à jour avec succès",
  },
  grade: {
    coefficientMustBePositive: "Le coefficient doit être positif",
    invalidMark: "La note est invalide",
    markMustBeNullIfDispensed: "La note doit être nulle si la note est dispensée",
    notFound: "Note introuvable",
  },
  schoolYear: {
    hasEnded: "L'année scolaire a pris fin",
  },
  weeklySession: {
    cannotBeUpdated: "Le créneau horaire ne peut pas être mis à jour",
    updateSuccessfully: "Créneau horaire mis à jour avec succès",
  },
  invoice: {
    paymentSplitIndexOutOfRange: "L'index de répartition du paiement est hors plage.",
    invalidPaymentMethodForSplitPayment:
      "Le mode de paiement sélectionné n'est pas valide pour cette répartition.",
    invoiceAlreadyPaid: "La facture a déjà été payée.",
    splitAlreadyPaid: "La tranche a déjà été payée.",
    cannotPayInvoiceThatIsMergedIntoAnotherInvoice:
      "Impossible de payer une facture fusionnée avec une autre individuellement.",
    transactionReferenceAlreadyExists: "La référence de la transaction existe déjà",
    salaryCannotBeNegative: "Le salaire ne peut pas être négatif.",
    cannotBePrinted: "La facture ne peut pas être imprimée.",
    cannotBeMerged: "La facture ne peut pas être fusionnée.",
    cannotBeUnMerged: "La facture ne peut pas être annulée.",
    cannotBeUnPaid: "La facture ne peut pas être annulée.",
    cannotDeleteAllSplitWithExistingPaidSplits:
      "Impossible de supprimer toutes les répartitions avec des répartitions payées existantes.",
    cannotBeUpdated: "La facture ne peut pas être mise à jour.",
    splitsAmountNotValid: "Le montant des répartitions n'est pas valide.",
    splitsCountNotValid: "Le nombre de répartitions n'est pas valide.",
  },
  missing: {
    avatar: "L'avatar est manquant",
    birthDate: "La date de naissance est manquante",
  },
  user: {
    avatarUploadedSuccessfully: "Avatar téléchargé avec succès",
    invalidData: "Données utilisateur invalides",
  },
  alert: {
    invalidAlertConfiguration: "Configuration d'alerte incorrecte",
    cannotUpdateSentAlert: "Vous ne pouvez pas modifier une alerte qui a déjà été envoyée.",
    userAlreadyExists: "L'utilisateur existe déjà dans cette alerte.",
    cannotDeleteSentAlert: "Impossible de supprimer une alerte déjà envoyée.",
    notEnoughSmsSold:
      "Vous n'avez pas suffisamment de Sold SMS pour effectuer cette action. Veuillez acheter plus de crédits SMS.",
    cannotMinusThisSmsAmount:
      "Impossible de soustraire plus de crédits SMS que le solde disponible",
    userWithoutPhoneNumber: "L'utilisateur n'a pas de numéro de téléphone",
  },
  gradeReportTemplate: {
    addedSuccessfully: "Modèle de bulletin de notes ajouté avec succès",
    updatedSuccessfully: "Modèle de bulletin de notes mis à jour avec succès",
    deletedSuccessfully: "Modèle de bulletin de notes supprimé avec succès",
    cannotDeleteDefaultTemplate: "Impossible de supprimer le modèle par défaut",
    cannotDeleteBuiltInTemplate: "Impossible de supprimer le modèle intégré",
  },
  bankCheck: {
    checkNumberAlreadyUsed: "Le numéro de chèque est déjà utilisé",
    updateSuccessfully: "Chèque bancaire mis à jour avec succès",
  },
  expenses: {
    addedSuccessfully: "Dépense ajoutée avec succès",
    updatedSuccessfully: "Dépense mise à jour avec succès",
    deletedSuccessfully: "Dépense supprimée avec succès",
  },
  groupType: {
    coefficientRequired: "Le coefficient est requis",
    examsRequired: "Les examens sont requis",
  },
  preRegistration: {
    registerStudentSuccess: "Inscription de l'élève appliquée avec succès",
    missingInformation: "Informations manquantes",
    deletePreRegistrationSuccess: "Préinscription supprimée avec succès",
    preRegistrationDeletionPolicy:
      "Seuls les préinscriptions en attente et rejetées peuvent être supprimées",
  },
  smartCalendar: {
    activityAddedSuccessfully: "Activité ajoutée avec succès",
    activityUpdatedSuccessfully: "Activité mise à jour avec succès",
    activityDeletedSuccessfully: "Activité supprimée avec succès",
    scheduleAlreadyInProgress: "Un calendrier est déjà en cours",
    scheduleUpdatedSuccessfully: "Calendrier mis à jour avec succès",
    scheduleDeletedSuccessfully: "Calendrier supprimé avec succès",
    scheduleInProgressCannotBeDeleted: "Un calendrier en cours ne peut pas être supprimé",
    scheduleAppliedSuccessfully: "Calendrier appliqué avec succès",
    scheduleCancelledSuccessfully: "Calendrier annulé avec succès",
    activityWithoutTeacher: "L'activité ne contient pas d'enseignant",
    scheduleStartedSuccessfully: "Calendrier démarré avec succès",
  },
  attendanceStatues: {
    absent: "Absent",
    expelled: "Exclu",
    late: "En retard",
    present: "Présent",
  },
  urgencies: {
    low: "Faible",
    high: "Élevé",
    medium: "Moyen",
  },
  groupTypeRules: {
    coefficientAndExamNotValid: "Le coefficient et l'examen ne sont pas valides",
    groupTypeUsedInGroup: "Le type de groupe est utilisé dans le groupe",
  },
  classGroup: {
    notBelongToThisClass: "L'élève n'appartient pas à cette classe",
  },
  signatures: {
    addedSuccessfully: "Signature ajoutée avec succès",
    deletedSuccessfully: "Signature supprimée avec succès",
  },
  post: {
    addedSuccessfully: "Post ajouté avec succès",
    updatedSuccessfully: "Post mis à jour avec succès",
    commentsNotAllowed: "Vous ne pouvez pas ajouter de commentaire à ce post",
    commentAddedSuccessfully: "Commentaire ajouté avec succès",
    maximumPinnedPostsReached: "Vous avez atteint le nombre maximum de posts épinglés",
    deletedSuccessfully: "Post supprimé avec succès",
  },
};
