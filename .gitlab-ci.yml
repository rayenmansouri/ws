stages:
  - deploy

deploy-iecd-types:
  stage: deploy
  image: node:lts-slim
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - node_modules/
  before_script:
    - TXT_RED="\e[31m"
  script:
    - start=$(date +%s) && npm install
    - end=$(date +%s) && duration=$((end - start)) && echo -e "${TXT_RED}Installed node_modules in $duration seconds"
    - cd iecd-types/
    - npm install
    - npm run autoIncrement
    - apt-get update && apt-get install -y git
    - git config --global user.email "ci@gitlab.com"
    - git config --global user.name "Gitlab CI"
    - ./autoIncrement.sh
    - echo "@Softylines-Alternance:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - cat .npmrc
    - npm publish
    - git push -o ci.skip https://$DEPLOY_USERNAME:$WRITE_TOKEN@gitlab.com/Softylines-Alternance/iecd-backend-v1.git/ HEAD:develop
  only:
    - develop

deploy-shared-types:
  stage: deploy
  image: node:lts-slim
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - node_modules/
  before_script:
    - TXT_RED="\e[31m"
  script:
    - start=$(date +%s) && npm install
    - end=$(date +%s) && duration=$((end - start)) && echo -e "${TXT_RED}Installed node_modules in $duration seconds"
    - cd shared-types/
    - npm install
    - npm run build
    - apt-get update && apt-get install -y git
    - git config --global user.email "ci@gitlab.com"
    - git config --global user.name "Gitlab CI"
    - echo "@Softylines-Alternance:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - cat .npmrc
    - npm publish
    - git push -o ci.skip https://$DEPLOY_USERNAME:$WRITE_TOKEN@gitlab.com/Softylines-Alternance/iecd-backend-v1.git/ HEAD:feat/participant
  only:
    - feat/participant
    
deploy-dev:
  stage: deploy
  needs:
    - job: deploy-iecd-types
    - job: deploy-shared-types
  only:
    - develop
  script:
    - echo "Triggering deployment webhook..."
    - |
      curl -X POST \
        -H "X-Deploy-Token: $WEBHOOK_TOKEN_DEV" \
        -H "Content-Type: application/json" \
        "$WEBHOOK_URL_DEV"
